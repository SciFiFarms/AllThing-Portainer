#!/usr/bin/env bash

if [ "$TAG" = "local" ]; then
    echo "Not a production setup. Will not update images."
    exit
fi

# Update daily.
# TODO: It would be nice to send it a MQTT message to update. 
sleep $image_refresh_time
echo "Updating images."

# TODO: These should probably be pulled in via an env var and looped over.
# It would also be nice to only restart the service if it only had a different image.
docker image pull ${image_provider}/technocore-docs:${TAG}
docker service update --force ${stack_name}_docs
docker image pull ${image_provider}/technocore-home-assistant:${TAG}
docker service update --force ${stack_name}_home_assistant
docker image pull ${image_provider}/technocore-home-assistant-db:${TAG}
docker service update --force ${stack_name}_home_assistant_db
docker image pull ${image_provider}/technocore-vernemq:${TAG}
docker service update --force ${stack_name}_mqtt
docker image pull ${image_provider}/technocore-node-red:${TAG}
docker service update --force ${stack_name}_node_red
docker image pull ${image_provider}/technocore-esphome-wrapper:${TAG}
docker service update --force ${stack_name}_platformio
docker image pull ${image_provider}/technocore-vault:${TAG}
docker service update --force ${stack_name}_vault

echo "Finished pulling images sans portainer."
docker image pull ${image_provider}/technocore-portainer:${TAG} 
docker service update --force ${stack_name}_portainer # This should always be last. 
echo "Finished pulling portainer image."
